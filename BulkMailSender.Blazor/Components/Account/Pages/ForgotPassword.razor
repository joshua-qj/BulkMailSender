@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using BulkMailSender.Application.Dtos.UserDtos
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities


@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IRequestPasswordResetUseCase RequestPasswordResetUseCase

<PageTitle>Forgot your password?</PageTitle>

<h1 class="center-content">Forgot your password?</h1>
<h2>Enter your email.</h2>
<hr />
<div class="row">
    <div class="col-md-12">
        <!-- Status message for general information -->
        <StatusMessage Message="@message" />
    </div>
    <div class="col-md-12">
        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Reset password</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();
    private string? message;
    private async Task OnValidSubmitAsync()
    {
        var baseUri = NavigationManager.BaseUri;
        ResultDto result = await RequestPasswordResetUseCase.ExecuteAsync(Input.Email, HtmlEncoder.Default.Encode(baseUri));
        if (result.IsSuccess)
        {
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }
        else
        {
            message = string.Join(", ", result.Errors);
        }

    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
